#include<iostream>
using namespace std;

double p[20];
int n, k;
int have[20] = { 0 };/*状态数组*/
double ans = 0;

//深度优先 
int dfs(int id, double pro, int cnt, int card, int coin) {
	int ret;//保存结果 
	if (have[id]) {
		coin++;
		pro *= p[id];
		cnt++;
		ret = 0;
		if (coin / k >= n - card) {
			ans += pro * cnt;
			return ret;
		}
	}
	else {
		card++;
		pro *= p[id];
		cnt++;
		have[id] = 1;
		ret = 1;
		if (card == n) {
			ans += pro * cnt;
			return ret;
		}
	}
	for (int i = 1; i <= n; i++) {
		if (dfs(i, pro, cnt, card, coin)) {
			have[i] = 0;
		}
	}
	return ret;
}

signed main() {
	cin >> n >> k;
	for (int i = 1; i <= n; i++) {
		cin >> p[i];
	}
	for (int i = 1; i <= n; i++) {
		if (dfs(i, 1, 0, 0, 0)) {
			have[i] = 0;
		}
	}
	cout << ans;
	return 0;
}/*
程序结束
*/ 